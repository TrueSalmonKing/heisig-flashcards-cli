#!/bin/bash


# TO DO !!!!!!!!!!!!!!!!!!!!!!!!!!!!
# Add a second mode where the user can choose to output a kanji and input a keyword !

#MODE 0 -> Keyword Output with Kanji Input
#MODE 1 -> Kanji Output with Keyword Input

MODE=0;args=$#; min=0; max=0; resolv_t=0; itr=0; kan_val=0; key_val=0; ID=0; SCORE_CORR=0; SCORE_WR=0

setup(){
	case $args in
	# set the resolve time value to user input, and set the iterations to default 1
	1)
		resolv_t=$1
		itr=1;
		;;
	# set the interval from where the kanji is chosen
	2)
		min=$1
		max=$2
		resolv_t=3
		itr=1;
		;;
	# set the interval from where the kanji is chosen, when the resolve time value is also set 
	3)
		min=$2
		max=$3
		resolv_t=$1
		itr=1;
		;;
	# set the interval from where the kanji is chosen and the resolve time value, when the iterations number is also set 
	4)
		min=$2
		max=$3
		resolv_t=$1
		itr=$4
		;;
	# set resolve time to a default 3sec value and the iterations to 1, if no value is specified
	*)
		resolv_t=3
		itr=1;
	esac
}

get_Kanji(){
	# set the interval of from where the kanji is chosen 
	case $args in
	2)
		val=$(./randomHeisigKeyword $min $max); echo $val; ID=$(grep -o '[0-9]*' <<< "$val"); key_val=$(grep -o '[a-zA-Z\-]*' <<< $(echo $val)); kan_value=$( grep "["$'\xe4\xb8\x80'"-"$'\xe9\xbe\xa5'"]" <<< $(./randomHeisigKanji $ID)); timed_Answer; ./randomHeisigKanji $ID
		;;
	3)
		val=$(./randomHeisigKeyword $min $max); echo $val; ID=$(grep -o '[0-9]*' <<< "$val"); key_val=$(grep -o '[a-zA-Z\-]*' <<< $(echo $val)); kan_value=$( grep "["$'\xe4\xb8\x80'"-"$'\xe9\xbe\xa5'"]" <<< $(./randomHeisigKanji $ID)); timed_Answer; ./randomHeisigKanji $ID
		;;
	4)
		val=$(./randomHeisigKeyword $min $max); echo $val; ID=$(grep -o '[0-9]*' <<< "$val"); key_val=$(grep -o '[a-zA-Z\-]*' <<< $(echo $val)); kan_value=$( grep "["$'\xe4\xb8\x80'"-"$'\xe9\xbe\xa5'"]" <<< $(./randomHeisigKanji $ID)); timed_Answer; ./randomHeisigKanji $ID
		;;
	*)
		val=$(./randomHeisigKeyword); echo $val;  ID=$(grep -o '[0-9]*' <<< "$val"); key_val=$(grep -o '[a-zA-Z\-]*' <<< $(echo $val)); kan_value=$( grep "["$'\xe4\xb8\x80'"-"$'\xe9\xbe\xa5'"]" <<< $(./randomHeisigKanji $ID)); timed_Answer; ./randomHeisigKanji $ID
		;;
	esac
}

check_arguments(){
	if [ $args -gt 4 ]; then
		echo "Numeber of arguments must not exceed 4 !!, Please run once more with either of the following syntaxes:"
		echo "./randomHeisigK\&K"
		echo "./randomHeisigK\&K \$timer"
		echo "./randomHeisigK\&K \$smallest_kanji_number \$largest_kanji_number"
		echo "./randomHeisigK\&K \$timer \$smallest_kanji_number \$largest_kanji_number \$iterations"
		exit
	fi
}

timed_Answer(){
	read -t $resolv_t
	if [ $? -eq 0 ]; then
		if [ "${REPLY}" = "q" ] || [ "${REPLY}" = "quit" ] || [ "${REPLY}" = "Q" ] || [ "${REPLY}" = "Quit" ]; then
			score
			exit
		elif [ "${REPLY}" = "$val" ]; then
			echo "Correct !"; SCORE_CORR=$((++SCORE_CORR)); score; return
		else
			echo "Incorrect !"; SCORE_WR=$((++SCORE_WR)); echo "Correct Answer: "${val}; score; return
		fi
	else
		SCORE_WR=$((++SCORE_WR)); echo "Correct Answer: ID "${ID} " VALUE "${val}; score; return
	fi
}

score(){
	echo "Total Score:"
	echo "Correct: "${SCORE_CORR}
	echo "Incorrect: "${SCORE_WR}
}

####################################  MAIN  ####################################

check_arguments
setup $1 $2 $3 $4
while [ $itr -gt 0 ]; do
	itr=$((--itr))
	get_Kanji
done
